@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

include(FetchContent)

if(NOT COMMAND CPMAddPackage)
    file(DOWNLOAD https://github.com/cpm-cmake/CPM.cmake/releases/download/v0.40.2/CPM.cmake
         "${CMAKE_CURRENT_BINARY_DIR}/cmake/CPM.cmake")
    include("${CMAKE_CURRENT_BINARY_DIR}/cmake/CPM.cmake")
endif()

if(NOT TARGET spdlog::spdlog)
    CPMAddPackage(
        NAME spdlog
        VERSION 1.15.0
        GITHUB_REPOSITORY gabime/spdlog
        OPTIONS
        "SPDLOG_BUILD_SHARED OFF"
        "SPDLOG_BUILD_EXAMPLE OFF"
        "SPDLOG_BUILD_TESTS OFF"
        "SPDLOG_INSTALL OFF"
    )
endif()

if(NOT TARGET nlohmann_json::nlohmann_json)
    FetchContent_Declare(
        json 
        URL https://github.com/nlohmann/json/releases/download/v3.12.0/json.tar.xz
    )
    FetchContent_MakeAvailable(json)
endif()

if(NOT TARGET tomlplusplus::tomlplusplus)
    FetchContent_Declare(
        tomlplusplus
        GIT_REPOSITORY https://github.com/marzer/tomlplusplus
        GIT_TAG v3.4.0
        GIT_PROGRESS TRUE
    )
    set(TOML_EXCEPTIONS OFF CACHE BOOL "Enable TOML exceptions" FORCE)
    FetchContent_MakeAvailable(tomlplusplus)
endif()

if(NOT TARGET Tracy::TracyClient)
    FetchContent_Declare(
        tracy
        GIT_REPOSITORY https://github.com/wolfpld/tracy
        GIT_TAG v0.11.0
        GIT_PROGRESS TRUE
    )
    set(TRACY_ENABLE OFF CACHE BOOL "Enable Tracy profiling" FORCE)
    set(TRACY_ON_DEMAND ON CACHE BOOL "Tracy on-demand profiling" FORCE)
    FetchContent_MakeAvailable(tracy)
endif()

if(NOT TARGET Luau.VM)
    set(LUAU_BUILD_CLI OFF CACHE BOOL "Build Luau CLI" FORCE)
    set(LUAU_BUILD_TESTS OFF CACHE BOOL "Build Luau tests" FORCE)
    set(LUAU_BUILD_WEB OFF CACHE BOOL "Build Luau web components" FORCE)
    
    FetchContent_Declare(
        luau
        GIT_REPOSITORY https://github.com/luau-lang/luau
        GIT_TAG 0.680
        GIT_PROGRESS TRUE
    )
    FetchContent_MakeAvailable(luau)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/RobloxModLoaderTargets.cmake")

check_required_components(RobloxModLoader)

function(roblox_add_mod MOD_NAME)
    cmake_parse_arguments(MOD "" "" "SOURCES;DEPENDENCIES;INCLUDE_DIRS;COMPILE_DEFINITIONS" ${ARGN})
    
    if(NOT MOD_SOURCES)
        file(GLOB_RECURSE MOD_SOURCES CONFIGURE_DEPENDS "*.cpp" "*.hpp" "*.h")
    endif()
    
    add_library(${MOD_NAME} MODULE ${MOD_SOURCES})
    
    target_link_libraries(${MOD_NAME} PRIVATE RobloxModLoader::RobloxModLoader)
    
    if(MOD_DEPENDENCIES)
        target_link_libraries(${MOD_NAME} PRIVATE ${MOD_DEPENDENCIES})
    endif()
    
    if(MOD_INCLUDE_DIRS)
        target_include_directories(${MOD_NAME} PRIVATE ${MOD_INCLUDE_DIRS})
    endif()
    
    if(MOD_COMPILE_DEFINITIONS)
        target_compile_definitions(${MOD_NAME} PRIVATE ${MOD_COMPILE_DEFINITIONS})
    endif()
    
    set_target_properties(${MOD_NAME} PROPERTIES
        CXX_STANDARD 23
        CXX_STANDARD_REQUIRED ON
        CXX_EXTENSIONS OFF
    )
    
    # MSVC specific settings
    if(MSVC)
        target_compile_options(${MOD_NAME} PRIVATE
            /bigobj
            /utf-8
            $<$<CONFIG:Debug>:/ZI>
            $<$<CONFIG:RelWithDebInfo>:/O2 /Oi /Ot /Oy /Ob3 /sdl- /GL /GF /GS- /Gw>
        )
        target_link_options(${MOD_NAME} PRIVATE
            $<$<CONFIG:Debug>:/INCREMENTAL>
            $<$<CONFIG:RelWithDebInfo>:/LTCG /OPT:REF,ICF /GUARD:NO>
        )
    endif()
    
    message(STATUS "Created RobloxModLoader mod: ${MOD_NAME}")
endfunction()