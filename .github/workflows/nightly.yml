name: Nightly Build

on:
  schedule:
    - cron: "0 2 * * *"  # Every day at 2 AM UTC
  workflow_dispatch:

concurrency:
  group: nightly
  cancel-in-progress: true

jobs:
  check_recent_commit:
    runs-on: ubuntu-latest
    name: Check Recent Commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4

      - id: should_run
        name: Check if latest commit date is within the previous 24 hours
        run: |
          if [ -z "$(git rev-list --since="24 hours ago" --all)" ]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  build_nightly:
    runs-on: windows-latest
    name: Build Nightly
    needs: check_recent_commit
    if: needs.check_recent_commit.outputs.should_run == 'true'
    outputs:
      full_sha: ${{ steps.var.outputs.full_sha }}
      short_sha: ${{ steps.var.outputs.short_sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2

      - name: Generate CMake project
        run: cmake -B build -G "Visual Studio 17 2022" -A x64

      - name: Build Release DLL
        run: cmake --build build --config Release --parallel 4

      - name: Check if DLL got built
        run: if (-Not (Test-Path -path "build/Release/roblox_modloader.dll")) {throw 1}
        shell: pwsh

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: |
            build/Release/roblox_modloader.dll
            build/Release/roblox_modloader.pdb
            build/Release/dwmapi.dll

      - name: Generate Build Info
        id: var
        run: |
          echo "full_sha=$(git rev-parse HEAD)" >> $env:GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $env:GITHUB_OUTPUT
        shell: pwsh

  recreate_release:
    runs-on: ubuntu-latest
    name: Recreate Release
    needs: build_nightly
    if: needs.check_recent_commit.outputs.should_run == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Delete Existing Release
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const tag = "nightly";

            const releases = await github.rest.repos.listReleases({
              owner: owner,
              repo: repo,
            });

            const release = releases.data.find(release => release.tag_name === tag);

            if (release) {
              await github.rest.repos.deleteRelease({
                owner: owner,
                repo: repo,
                release_id: release.id,
              });
              console.log(`Deleted release with ID ${release.id}`);
            } else {
              console.log("No existing release to delete");
            }

            try {
              await github.rest.git.deleteRef({
                owner: owner,
                repo: repo,
                ref: `tags/${tag}`,
              });
              console.log(`Deleted tag ${tag}`);
            } catch (error) {
              console.error(`Error deleting tag: ${error.message}`);
            }

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: binary

      - name: Echo build sha256
        id: build_sha
        run: |
          sha256sum roblox_modloader.dll > sha256.checksum
          if [ -f "dwmapi.dll" ]; then
            sha256sum dwmapi.dll >> sha256.checksum
          fi
          echo "build_sha<<EOF" >> $GITHUB_OUTPUT
          cat sha256.checksum >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          cat sha256.checksum

      - name: Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nightly [${{ needs.build_nightly.outputs.short_sha }}]
          tag_name: nightly
          body: |
            **This release has been built by Github Actions**
            [Link to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Build SHA256:
            ```
            ${{ steps.build_sha.outputs.build_sha }}
            ```

            These are nightly builds of Roblox ModLoader, they are provided for testing purposes only:
            - Test if your build environment produces a working roblox_modloader.dll
            - Test if source code changes are working correctly
            - Early access to new features and bug fixes

            If you use this build you are on your own, no warranty is provided.

            **Includes:**
            - `roblox_modloader.dll` - Main mod loader library
            - `dwmapi.dll` - Proxy DLL for injection (if available)

            Full Commit Hash:
            ```
            ${{ needs.build_nightly.outputs.full_sha }}
            ```
          files: |
            roblox_modloader.dll
            dwmapi.dll
